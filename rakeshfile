pipeline {
  agent any
tools{
      maven 'M2_HOME'
          }
   
   stages {
    stage('Git checkout') {
      steps {
           echo 'This is for cloning the gitrepo'
           git branch: 'master', url: 'https://github.com/yadagiri7013/healthcare-project.git'
            }
          }
     stage('Maven Package') {
      steps {
           echo 'This is for packaging the application'
           sh 'mvn package'
            }
          }
     stage('Test Results') {
      steps {
           echo 'This is for generating Test Results'
           publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: '/var/lib/jenkins/workspace/healthcare-project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
          }
     stage('Docker Image Creation') {
      steps {
           echo 'This is for Docker image build'
           sh 'docker build -t yadagiri14/healthcare:latest .'
            }
          }
     stage('Login to Dockerhub') {
      steps {
             withCredentials([usernamePassword(credentialsId: 'docker-id', passwordVariable: 'password', usernameVariable: 'username')]) {
          // withCredentials([usernameColonPassword(credentialsId: 'docker-id-user', variable: 'docker-all')]) {
//withCredentials([usernamePassword(credentialsId: 'dockeruser', passwordVariable: 'password', usernameVariable: 'username')]) {
    // some block

          // withCredentials([string(credentialsId: 'dockercode', variable: 'dockervarcode')]) {
           sh 'docker login -u yadagiri14 -p ${password}'
                         }
                   }
               }
     stage('Push the Docker image') {
      steps {
        sh 'docker push yadagiri/healthcare:latest'
                                }
            }
      stage('Ansible Playbook') {
      steps {
        ansiblePlaybook credentialsId: 'sshuser', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible-playbook.yml', vaultTmpPath: ''
                                }
            }
      
                
     }
}
